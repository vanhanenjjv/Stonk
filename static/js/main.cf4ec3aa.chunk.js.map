{"version":3,"sources":["components/DatePicker.tsx","github.ts","components/Layout.tsx","components/Header.tsx","stock/upload/components/File.tsx","stock/parser.ts","stock/upload/state.tsx","stock/upload/index.ts","stock/upload/view.tsx","stock/analytics/components/LongestBullishTrend.tsx","stock/analytics/components/Statistics.tsx","stock/analytics/components/Chart.tsx","stock/analytics/components/Table.tsx","stock/analytics/state.tsx","stock/analytics/index.ts","stock/analytics/view.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DatePicker","generatePicker","dayjsGenerateConfig","github","username","GITHUB_USERNAME","repository","GITHUB_REPOSITORY_NAME","commitHash","GIT_COMMIT_HASH","link","Layout","children","Content","style","width","alignSelf","maxWidth","padding","margin","Footer","textAlign","Link","type","rel","target","href","Header","title","onBack","extra","subTitle","ghost","size","shape","GithubOutlined","File","props","Dragger","beforeUpload","file","text","then","onReceive","maxCount","showUploadList","className","InboxOutlined","readStockData","line","split","map","field","trim","date","close","volume","open","high","low","dayjs","dollar","Number","priceChange","Math","abs","compareByDate","a","b","unix","addSimpleMovingAverage5","datum","index","all","sma5Percentage","slice","reduce","sum","value","str","String","startsWith","React","useReducer","model","message","stockData","content","filter","sort","useState","update","useEffect","length","onUpload","direction","LongestBullishTrend","trend","useMemo","streak","current","longest","i","push","undefined","start","end","daysLasted","dateRange","template","startDate","format","endDate","priceIncrease","startClose","toFixed","gutter","justify","suffix","Statistics","Chart","d","height","xField","yField","data","Table","scroll","x","columns","dataIndex","render","sorter","dataSource","rowKey","r","initialState","stockDataInRange","range","from","subtract","to","add","isAfter","isBefore","isBetween","RangePicker","onChange","App","setStockData","clearStockData","useCallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","extend","localizedFormat","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf4ec3aa.chunk.js","sourcesContent":["import { Dayjs } from 'dayjs';\nimport dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/es/date-picker/generatePicker';\nimport 'antd/es/date-picker/style/index';\n\n\nexport const DatePicker = generatePicker<Dayjs>(dayjsGenerateConfig);\n","import { GitHub } from './types';\n\n\ndeclare const GIT_COMMIT_HASH: string;\n\ndeclare const GITHUB_USERNAME: string;\n\ndeclare const GITHUB_REPOSITORY_NAME: string;\n\n\nconst github: GitHub = {\n  username: GITHUB_USERNAME,\n  repository: GITHUB_REPOSITORY_NAME,\n  commitHash: GIT_COMMIT_HASH,\n  link: `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPOSITORY_NAME}`\n};\n\n\nexport default github;\n\n","import React from 'react';\r\n\r\nimport { Layout as AntLayout, Typography } from 'antd';\r\n\r\nimport github from '../github';\r\n\r\n\r\nexport const Layout: React.FC = ({ children }) => {\r\n  return (\r\n    <AntLayout>\r\n      <AntLayout.Content\r\n        style={{\r\n          width: '100%',\r\n          alignSelf: 'center',\r\n          maxWidth: 900,\r\n          padding: '0 16px',\r\n          margin: '16px 0 0 0'\r\n        }}>\r\n        {children}\r\n      </AntLayout.Content>\r\n      <AntLayout.Footer style={{ textAlign: 'center' }}>\r\n        <Typography.Link\r\n          type=\"secondary\"\r\n          rel=\"noopener\"\r\n          target=\"_blank\"\r\n          href={`${github.link}/commit/${github.commitHash}`}>\r\n          {github.commitHash}\r\n        </Typography.Link>\r\n      </AntLayout.Footer>\r\n    </AntLayout>\r\n  );\r\n};\r\n","import React from 'react';\n\nimport { Button, PageHeader, Space } from 'antd';\nimport { GithubOutlined } from '@ant-design/icons';\n\nimport github from '../github';\n\n\nexport interface HeaderProps {\n  title: string\n  onBack?: () => void\n  extra?: React.ReactNode\n}\n\nexport const Header: React.FC<HeaderProps> = ({ title, onBack, extra }) => {\n  return (\n    <PageHeader\n      title={title}\n      subTitle=\"\"\n      onBack={onBack}\n      ghost={false}\n      extra={\n        <Space size=\"middle\">\n          {extra}\n          <Button\n            key=\"GitHub\"\n            shape=\"circle\"\n            size=\"large\"\n            rel=\"noopener\"\n            href={github.link}\n            target=\"_blank\">\n            <GithubOutlined />\n          </Button>\n        </Space>\n      } />\n  );\n};\n","import React from 'react';\n\nimport { Upload } from 'antd';\nimport { RcFile } from 'antd/lib/upload/interface';\nimport { InboxOutlined } from '@ant-design/icons';\n\n\nexport interface FileProps {\n  onReceive: (content: string) => void\n}\n\nexport const File: React.FC<FileProps> = props => {\n  const receive = (file: RcFile): boolean => {\n    file.text().then(props.onReceive);\n\n    return false;\n  };\n\n  return (\n    <Upload.Dragger\n      beforeUpload={receive}\n      maxCount={1}\n      showUploadList={false}>\n      <p className=\"ant-upload-drag-icon\">\n        <InboxOutlined />\n      </p>\n      <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n      <p className=\"ant-upload-hint\">\n        more text goes here\n      </p>\n    </Upload.Dragger>\n  );\n};\n","import dayjs from 'dayjs';\r\nimport { StockData } from '../types';\r\n\r\n\r\nexport function readCsv(csv: string): StockData[] {\r\n  return csv\r\n    .split('\\n')\r\n    .slice(1)\r\n    .filter(line => line)\r\n    .map(readStockData)\r\n    .sort(compareByDate)\r\n    .map(addSimpleMovingAverage5);\r\n}\r\n\r\nfunction readStockData(line: string): StockData {\r\n  const [date, close, volume, open, high, low] = line.split(',').map(field => field.trim());\r\n\r\n  return {\r\n    date: dayjs(date),\r\n    close: dollar(close),\r\n    volume: Number(volume),\r\n    open: dollar(open),\r\n    high: dollar(high),\r\n    low: dollar(low),\r\n    priceChange: Math.abs(dollar(high) - dollar(low))\r\n  };\r\n}\r\n\r\nfunction compareByDate(a: StockData, b: StockData): number {\r\n  return a.date.unix() - b.date.unix();\r\n}\r\n\r\nfunction addSimpleMovingAverage5(datum: StockData, index: number, all: StockData[]): StockData {\r\n  if (index < 5)\r\n    return datum;\r\n\r\n  const sma5 = all\r\n    .slice(index - 5, index)\r\n    .reduce((sum, { close }) => sum += close, 0)\r\n    / 5;\r\n\r\n  const sma5Percentage = (1 - (sma5 / datum.open)) * 100;\r\n\r\n  return { ...datum, sma5Percentage };\r\n}\r\n\r\ntype DollarConstructor = (value: unknown) => number;\r\n\r\nconst dollar: DollarConstructor = value => {\r\n  if (typeof value === 'number')\r\n    return value;\r\n\r\n  const str = String(value);\r\n\r\n  return Number(\r\n    str.startsWith('$')\r\n      ? str.slice(1)\r\n      : str\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport * as parser from '../parser';\r\nimport { Message, Model } from './types';\r\n\r\n\r\nexport default (): [Model, React.Dispatch<Message>] => {\r\n  const initialValue: Model = {\r\n    stockData: []\r\n  };\r\n\r\n  const update = (model: Model, message: Message): Model => {\r\n    switch (message.type) {\r\n    case 'PARSE_FILE': {\r\n      const stockData = parser.readCsv(message.content);\r\n\r\n      return {\r\n        ...model,\r\n        stockData\r\n      };\r\n    }\r\n    case 'CLEAR_STOCKDATA':\r\n      return {\r\n        ...model,\r\n        stockData: []\r\n      };\r\n    }\r\n  };\r\n\r\n  return React.useReducer(update, initialValue);\r\n};\r\n","import { default as View } from './view';\r\nimport * as types from './types';\r\nimport * as state from './state';\r\n\r\n\r\nexport default {\r\n  View,\r\n  types,\r\n  state\r\n};\r\n","import React from 'react';\r\n\r\nimport { Card, Space } from 'antd';\r\n\r\nimport { StockData } from '../../types';\r\nimport { Header } from '../../components';\r\nimport { File } from './components';\r\nimport useState from './state';\r\n\r\n\r\nexport interface UploadProps {\r\n  onUpload: (stockData: StockData[]) => void\r\n}\r\n\r\nexport default function Upload(props: UploadProps): JSX.Element {\r\n  const [{ stockData }, update] = useState();\r\n\r\n  React.useEffect(() => {\r\n    if (stockData.length !== 0) {\r\n      props.onUpload(stockData);\r\n      update({ type: 'CLEAR_STOCKDATA' });\r\n    }\r\n\r\n  }, [stockData]);\r\n\r\n  const receiveFile = (content: string): void => {\r\n    update({ type: 'PARSE_FILE', content });\r\n  };\r\n\r\n  return (\r\n    <Space style={{ width: '100%' }} direction=\"vertical\">\r\n      <Header title=\"Upload\" />\r\n      <Card><File onReceive={receiveFile} /></Card>\r\n    </Space>\r\n  );\r\n}\r\n","import { Card, Col, Row, Statistic } from 'antd';\nimport React from 'react';\n\nimport { StockData } from '../../../types';\n\n\nexport interface LongestBullishTrendProps {\n  stockData: StockData[]\n}\n\nexport const LongestBullishTrend: React.FC<LongestBullishTrendProps> = ({ stockData }) => {\n  const trend = React.useMemo(\n    () => {\n      const streak: { current: StockData[], longest: StockData[] } = { current: [], longest: [] };\n\n      for (let i = 1; i < stockData.length; ++i) {\n        const current = stockData[i];\n        const previous = stockData[i - 1];\n\n        if (previous.close > current.close) {\n          streak.current = [];\n          continue;\n        }\n\n        streak.current.push(current);\n\n        if (streak.current > streak.longest)\n          streak.longest = streak.current;\n      }\n\n      return streak.longest;\n    },\n    [stockData]\n  );\n\n  const [start, end] = React.useMemo(\n    () => {\n      const start = trend.length === 0 ? undefined : trend[0];\n      const end = trend.length === 0 ? undefined : trend[trend.length - 1];\n\n      return [start, end];\n    },\n    [trend]\n  );\n\n  const daysLasted = React.useMemo(() => trend.length, [trend]);\n\n  const dateRange = React.useMemo(\n    () => {\n      const template = 'DD.MM.YYYY';\n      const startDate = start?.date.format(template);\n      const endDate = end?.date.format(template);\n\n      return `${startDate} - ${endDate}`;\n    },\n    [start, end]\n  );\n\n  const priceIncrease = React.useMemo(\n    () => {\n      const startClose = start?.close ?? 0;\n      const endClose = end?.close ?? 0;\n\n      return (((endClose / startClose) - 1) * 100).toFixed(1);\n    },\n    [start, end]\n  );\n\n  return (\n    <Card title=\"Longest bullish trend\">\n      <Row gutter={8} justify=\"space-around\">\n        <Col>\n          <Statistic\n            title=\"Lasted\"\n            value={daysLasted}\n            suffix=\"days\" />\n        </Col>\n        <Col>\n          <Statistic\n            title=\"From\"\n            value={dateRange} />\n        </Col>\n        <Col>\n          <Statistic\n            title=\"Value increased\"\n            value={priceIncrease}\n            suffix=\"%\" />\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n","import React from 'react';\n\n\nimport { LongestBullishTrend } from './LongestBullishTrend';\nimport { StockData } from '../../../types';\n\n\nexport interface StatisticsProps {\n  stockData: StockData[]\n}\n\nexport const Statistics: React.FC<StatisticsProps> = ({ stockData }) => {\n  return (\n    <LongestBullishTrend stockData={stockData} />\n  );\n};\n","import React from 'react';\n\nimport { Stock } from '@ant-design/charts';\n\nimport { StockData } from '../../../types';\nimport { Card } from 'antd';\n\n\nexport interface ChartProps {\n  stockData: StockData[]\n}\n\nexport const Chart: React.FC<ChartProps> = props => {\n  const stockData = React.useMemo(\n    () => props.stockData.map(d => ({\n      ...d,\n      date: d.date.format('YYYY-MM-DD')\n    })),\n    [props.stockData]\n  );\n\n  return (\n    <Card>\n      <Stock\n        width={400}\n        height={500}\n        xField=\"date\"\n        yField={['open', 'close', 'high', 'low']}\n        data={stockData} />\n    </Card>\n  );\n};\n","import React from 'react';\n\nimport { Table as AntdTable } from 'antd';\nimport dayjs from 'dayjs';\n\nimport { StockData } from '../../../types';\n\n\nexport interface TableProps {\n  stockData: StockData[]\n}\n\nexport const Table: React.FC<TableProps> = ({ stockData }) => {\n  return (\n    <AntdTable\n      scroll={{ x: true }}\n      columns={[\n        {\n          title: 'Date',\n          dataIndex: 'date',\n          render: date => dayjs(date).format('ll'),\n          sorter: (a, b) => a.date.unix() - b.date.unix()\n        },\n        {\n          title: 'Close',\n          dataIndex: 'close',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.close - b.close\n        },\n        {\n          title: 'Volume',\n          dataIndex: 'volume',\n          sorter: (a, b) => a.volume - b.volume\n        },\n        {\n          title: 'Open',\n          dataIndex: 'open',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.open - b.open\n        },\n        {\n          title: 'High',\n          dataIndex: 'high',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.high - b.high\n        },\n        {\n          title: 'Low',\n          dataIndex: 'low',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.low - b.low\n        },\n        {\n          title: 'Change',\n          dataIndex: 'priceChange',\n          render: value => `$${value.toFixed(2)}`,\n          sorter: (a, b) => a.priceChange - b.priceChange\n        },\n        {\n          title: 'SMA5',\n          dataIndex: 'sma5Percentage',\n          render: value => value ? `${value.toFixed(2)}%` : 'n/a',\n          sorter: (a, b) => (a.sma5Percentage ?? 0) - (b.sma5Percentage ?? 0)\n        }\n      ]}\n      dataSource={stockData}\n      rowKey={r => r.date.unix()} />\n  );\n};\n","import dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { Message, Model } from './types';\r\n\r\n\r\nexport default (model?: Partial<Model>): [Model, React.Dispatch<Message>] => {\r\n  const initialState: Model = {\r\n    stockData: model?.stockData ?? [],\r\n    stockDataInRange: model?.stockData ?? [],\r\n    range: [null, null]\r\n  };\r\n\r\n  const reducer = (model: Model, message: Message): Model => {\r\n    switch (message.type) {\r\n    case 'SET_RANGE': {\r\n      return {\r\n        ...model,\r\n        stockDataInRange: model.stockData.filter(d => {\r\n          const date = dayjs(d.date);\r\n          const from = message.range?.[0]?.subtract(1, 'day');\r\n          const to   = message.range?.[1]?.add(1, 'day');\r\n\r\n          if (from && !to) return date.isAfter(from, 'day');\r\n          if (!from && to) return date.isBefore(to, 'day');\r\n          if (from && to)  return date.isBetween(from, to, 'day');\r\n\r\n          return true;\r\n        }),\r\n        range: message.range\r\n      };\r\n    }\r\n    }\r\n  };\r\n\r\n  return React.useReducer(reducer, initialState);\r\n};\r\n","import { default as View } from './view';\r\nimport * as types from './types';\r\nimport * as state from './state';\r\n\r\n\r\nexport default {\r\n  View,\r\n  types,\r\n  state\r\n};\r\n","import React from 'react';\r\n\r\nimport { Divider, Space } from 'antd';\r\nimport { Dayjs } from 'dayjs';\r\nimport { RangeValue } from 'rc-picker/lib/interface';\r\n\r\nimport { Statistics, Chart, Table } from './components';\r\nimport useState from './state';\r\nimport { StockData } from '../../types';\r\nimport { DatePicker, Header } from '../../components';\r\n\r\n\r\ninterface AnalyticsProps {\r\n  stockData: StockData[]\r\n  onBack: () => void\r\n}\r\n\r\nexport default function Analytics(props: AnalyticsProps): JSX.Element {\r\n  const [model, update] = useState({ stockData: props.stockData });\r\n\r\n  const setRange = (range: RangeValue<Dayjs>): void =>\r\n    update({ type: 'SET_RANGE', range: range ?? [null, null] });\r\n\r\n  return (\r\n    <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n      <Header\r\n        title=\"Analytics\"\r\n        onBack={props.onBack}\r\n        extra={<DatePicker.RangePicker onChange={setRange} />} />\r\n      <Divider>Statistics</Divider>\r\n      <Statistics stockData={model.stockData} />\r\n      <Divider>Chart</Divider>\r\n      <Chart stockData={model.stockData} />\r\n      <Divider>Table</Divider>\r\n      <Table stockData={model.stockData} />\r\n    </Space>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Layout } from './components';\r\nimport { StockData } from './types';\r\nimport { Analytics, Upload } from './stock';\r\n\r\n\r\nexport const App: React.FC = () => {\r\n  const [stockData, setStockData] = React.useState<StockData[]>([]);\r\n\r\n  const clearStockData = React.useCallback(() => setStockData([]), []);\r\n\r\n  return (\r\n    <Layout>\r\n      {stockData.length === 0\r\n        ? <Upload.View  onUpload={setStockData} />\r\n        : <Analytics.View onBack={clearStockData} stockData={stockData}  />}\r\n    </Layout>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.min.css';\r\nimport './index.css';\r\n\r\nimport dayjs from 'dayjs';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\ndayjs.extend(localizedFormat);\r\ndayjs.extend(isBetween);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}