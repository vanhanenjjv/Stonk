{"version":3,"sources":["components/DatePicker.tsx","github.ts","components/Layout.tsx","components/Header.tsx","stock/upload/components/File.tsx","stock/parser.ts","stock/upload/state.tsx","stock/upload/index.ts","stock/upload/view.tsx","stock/analytics/components/Statistics.tsx","stock/analytics/components/Chart.tsx","stock/analytics/components/Table.tsx","stock/analytics/state.tsx","stock/analytics/index.ts","stock/analytics/view.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["DatePicker","generatePicker","dayjsGenerateConfig","github","username","GITHUB_USERNAME","repository","GITHUB_REPOSITORY_NAME","commitHash","GIT_COMMIT_HASH","link","Layout","children","Content","style","width","alignSelf","maxWidth","padding","margin","Footer","textAlign","Link","type","rel","target","href","Header","title","onBack","extra","subTitle","ghost","size","shape","GithubOutlined","File","props","Dragger","beforeUpload","file","text","then","a","onReceive","name","maxCount","showUploadList","className","InboxOutlined","dollar","value","str","String","Number","startsWith","slice","React","useReducer","model","message","stockData","split","filter","line","map","field","trim","date","close","volume","open","high","low","dayjs","priceChange","Math","abs","sort","b","unix","datum","index","all","sma5Percentage","reduce","sum","source","data","undefined","useState","update","useEffect","length","onUpload","direction","Statistics","LongestBullishTrend","trend","useMemo","streak","current","longest","i","push","start","end","daysLasted","dateRange","template","startDate","format","endDate","priceIncrease","startClose","toFixed","gutter","justify","suffix","Chart","d","height","xField","yField","Table","records","scroll","x","columns","dataIndex","render","sorter","dataSource","rowKey","r","initialState","recordsInRange","range","uploadModalVisible","from","subtract","to","add","isAfter","isBefore","isBetween","RangePicker","onChange","App","setStockData","clearStockData","useCallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","extend","localizedFormat","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2847b66c.chunk.js","sourcesContent":["import { Dayjs } from 'dayjs';\nimport dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs';\nimport generatePicker from 'antd/es/date-picker/generatePicker';\nimport 'antd/es/date-picker/style/index';\n\n\nexport const DatePicker = generatePicker<Dayjs>(dayjsGenerateConfig);\n","import { GitHub } from './types';\n\n\ndeclare const GIT_COMMIT_HASH: string;\n\ndeclare const GITHUB_USERNAME: string;\n\ndeclare const GITHUB_REPOSITORY_NAME: string;\n\n\nconst github: GitHub = {\n  username: GITHUB_USERNAME,\n  repository: GITHUB_REPOSITORY_NAME,\n  commitHash: GIT_COMMIT_HASH,\n  link: `https://github.com/${GITHUB_USERNAME}/${GITHUB_REPOSITORY_NAME}`\n};\n\n\nexport default github;\n\n","import React from 'react';\r\n\r\nimport { Layout as AntLayout, Space, Typography } from 'antd';\r\n\r\nimport github from '../github';\r\n\r\n\r\nexport const Layout: React.FC = ({ children }) => {\r\n  return (\r\n    <AntLayout>\r\n      <AntLayout.Content\r\n        style={{\r\n          width: '100%',\r\n          alignSelf: 'center',\r\n          maxWidth: 900,\r\n          padding: '0 16px',\r\n          margin: '16px 0 0 0'\r\n        }}>\r\n        {children}\r\n      </AntLayout.Content>\r\n      <AntLayout.Footer style={{ textAlign: 'center' }}>\r\n        <Typography.Link\r\n          type=\"secondary\"\r\n          rel=\"noopener\"\r\n          target=\"_blank\"\r\n          href={`${github.link}/commit/${github.commitHash}`}>\r\n          {github.commitHash}\r\n        </Typography.Link>\r\n      </AntLayout.Footer>\r\n    </AntLayout>\r\n  );\r\n};\r\n","import React from 'react';\n\nimport { Button, PageHeader, Space } from 'antd';\nimport { GithubOutlined } from '@ant-design/icons';\n\nimport github from '../github';\n\n\nexport interface HeaderProps {\n  title: string\n  onBack?: () => void\n  extra?: React.ReactNode\n}\n\nexport const Header: React.FC<HeaderProps> = ({ title, onBack, extra }) => {\n  return (\n    <PageHeader\n      title={title}\n      subTitle=\"\"\n      onBack={onBack}\n      ghost={false}\n      extra={\n        <Space size=\"middle\">\n          {extra}\n          <Button\n            key=\"GitHub\"\n            shape=\"circle\"\n            size=\"large\"\n            rel=\"noopener\"\n            href={github.link}\n            target=\"_blank\">\n            <GithubOutlined />\n          </Button>\n        </Space>\n      } />\n  );\n};\n","import React from 'react';\n\nimport { Upload } from 'antd';\nimport { RcFile } from 'antd/lib/upload/interface';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { File as IFile } from '../types';\n\n\nexport interface FileProps {\n  onReceive: (file: IFile) => void\n}\n\nexport const File: React.FC<FileProps> = props => {\n  const receive = (file: RcFile): boolean => {\n    file.text().then(async text => {\n      props.onReceive({ name: file.name, text });\n    });\n\n    return false;\n  };\n\n  return (\n    <Upload.Dragger\n      beforeUpload={receive}\n      maxCount={1}\n      showUploadList={false}>\n      <p className=\"ant-upload-drag-icon\">\n        <InboxOutlined />\n      </p>\n      <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n      <p className=\"ant-upload-hint\">\n        more text goes here\n      </p>\n    </Upload.Dragger>\n  );\n};\n","import dayjs from 'dayjs';\r\nimport { StockData } from '../types';\r\n\r\n\r\nexport function readCsv(csv: string): StockData[] {\r\n  return csv\r\n    .split('\\n')\r\n    .slice(1)\r\n    .filter(line => line)\r\n    .map(readStockData)\r\n    .sort(byDate)\r\n    .map(addSimpleMovingAverage5);\r\n\r\n  function readStockData(line: string): StockData {\r\n    const [date, close, volume, open, high, low] = line.split(',').map(field => field.trim());\r\n\r\n    return {\r\n      date: dayjs(date),\r\n      close: dollar(close),\r\n      volume: Number(volume),\r\n      open: dollar(open),\r\n      high: dollar(high),\r\n      low: dollar(low),\r\n      priceChange: Math.abs(dollar(high) - dollar(low))\r\n    };\r\n  }\r\n\r\n  function byDate(a: StockData, b: StockData): number {\r\n    return a.date.unix() - b.date.unix();\r\n  }\r\n\r\n  function addSimpleMovingAverage5(datum: StockData, index: number, all: StockData[]): StockData {\r\n    if (index < 5)\r\n      return datum;\r\n\r\n    const sma5 = all\r\n      .slice(index - 5, index)\r\n      .reduce((sum, { close }) => sum += close, 0)\r\n      / 5;\r\n\r\n    const sma5Percentage = (1 - (sma5 / datum.open)) * 100;\r\n\r\n    return { ...datum, sma5Percentage };\r\n  }\r\n}\r\n\r\ntype DollarConstructor = (value: unknown) => number;\r\n\r\nconst dollar: DollarConstructor = value => {\r\n  if (typeof value === 'number')\r\n    return value;\r\n\r\n  const str = String(value);\r\n\r\n  return Number(\r\n    str.startsWith('$')\r\n      ? str.slice(1)\r\n      : str\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nimport * as parser from '../parser';\r\nimport { Message, Model } from './types';\r\n\r\n\r\nexport default (): [Model, React.Dispatch<Message>] => {\r\n  const initialValue: Model = {};\r\n\r\n  const update = (model: Model, message: Message): Model => {\r\n    switch (message.type) {\r\n    case 'SET_SOURCE': {\r\n      const stockData = parser.readCsv(message.file.text);\r\n\r\n      return {\r\n        ...model,\r\n        source: {\r\n          name: message.file.name,\r\n          data: stockData\r\n        }\r\n      };\r\n    }\r\n    case 'CLEAR_SOURCE':\r\n      return {\r\n        ...model,\r\n        source: undefined\r\n      };\r\n    }\r\n  };\r\n\r\n  return React.useReducer(update, initialValue);\r\n};\r\n","import { default as View } from './view';\r\nimport * as types from './types';\r\nimport * as state from './state';\r\n\r\n\r\nexport default {\r\n  View,\r\n  types,\r\n  state\r\n};\r\n","import React from 'react';\r\n\r\nimport { Card, Space } from 'antd';\r\n\r\nimport { StockData } from '../../types';\r\nimport { Header } from '../../components';\r\nimport { File } from './components';\r\nimport useState from './state';\r\nimport { File as IFile } from './types';\r\n\r\n\r\nexport interface UploadProps {\r\n  onUpload: (stockData: StockData[]) => void\r\n}\r\n\r\nexport default function Upload(props: UploadProps): JSX.Element {\r\n  const [{ source }, update] = useState();\r\n\r\n  React.useEffect(() => {\r\n    if (source?.data?.length && source.data.length > 0) {\r\n      props.onUpload(source?.data);\r\n      update({ type: 'CLEAR_SOURCE' });\r\n    }\r\n\r\n  }, [source?.data]);\r\n\r\n  const receiveFile = (file: IFile): void => {\r\n    update({ type: 'SET_SOURCE', file });\r\n  };\r\n\r\n  return (\r\n    <Space style={{ width: '100%' }} direction=\"vertical\">\r\n      <Header title=\"Upload\" />\r\n      <Card><File onReceive={receiveFile} /></Card>\r\n    </Space>\r\n  );\r\n}\r\n","import React from 'react';\n\nimport { Card, Col, Row, Statistic } from 'antd';\n\nimport { StockData } from '../../../types';\n\n\nexport interface StatisticsProps {\n  stockData: StockData[]\n}\n\nexport const Statistics: React.FC<StatisticsProps> = props => {\n  const LongestBullishTrend: React.FC = () => {\n    const trend = React.useMemo(\n      () => {\n        const streak: { current: StockData[], longest: StockData[] } = { current: [], longest: [] };\n\n        for (let i = 1; i < props.stockData.length; ++i) {\n          const current = props.stockData[i];\n          const previous = props.stockData[i - 1];\n\n          if (previous.close > current.close) {\n            streak.current = [];\n            continue;\n          }\n\n          streak.current.push(current);\n\n          if (streak.current > streak.longest)\n            streak.longest = streak.current;\n        }\n\n        return streak.longest;\n      },\n      [props.stockData]\n    );\n\n    const [start, end] = React.useMemo(\n      () => {\n        const start = trend.length === 0 ? undefined : trend[0];\n        const end = trend.length === 0 ? undefined : trend[trend.length - 1];\n\n        return [start, end];\n      },\n      [trend]\n    );\n\n    const daysLasted = React.useMemo(() => trend.length, [trend]);\n\n    const dateRange = React.useMemo(\n      () => {\n        const template = 'DD.MM.YYYY';\n        const startDate = start?.date.format(template);\n        const endDate = end?.date.format(template);\n\n        return `${startDate} - ${endDate}`;\n      },\n      [start, end]\n    );\n\n    const priceIncrease = React.useMemo(\n      () => {\n        const startClose = start?.close ?? 0;\n        const endClose = end?.close ?? 0;\n\n        return (((endClose / startClose) - 1) * 100).toFixed(1);\n      },\n      [start, end]\n    );\n\n    return (\n      <Card title=\"Longest bullish trend\">\n        <Row gutter={8} justify=\"space-around\">\n          <Col>\n            <Statistic\n              title=\"Lasted\"\n              value={daysLasted}\n              suffix=\"days\" />\n          </Col>\n          <Col>\n            <Statistic\n              title=\"From\"\n              value={dateRange} />\n          </Col>\n          <Col>\n            <Statistic\n              title=\"Value increased\"\n              value={priceIncrease}\n              suffix=\"%\" />\n          </Col>\n        </Row>\n      </Card>\n    );\n  };\n\n  return (\n    <LongestBullishTrend />\n  );\n};\n","import React from 'react';\n\nimport { Stock } from '@ant-design/charts';\n\nimport { StockData } from '../../../types';\nimport { Card } from 'antd';\n\n\nexport interface ChartProps {\n  stockData: StockData[]\n}\n\nexport const Chart: React.FC<ChartProps> = props => {\n  const stockData = React.useMemo(\n    () => props.stockData.map(d => ({\n      ...d,\n      date: d.date.format('YYYY-MM-DD')\n    })),\n    [props.stockData]\n  );\n\n  return (\n    <Card>\n      <Stock\n        width={400}\n        height={500}\n        xField=\"date\"\n        yField={['open', 'close', 'high', 'low']}\n        data={stockData} />\n    </Card>\n  );\n};\n","import React from 'react';\n\nimport { Table as AntdTable } from 'antd';\nimport dayjs from 'dayjs';\n\nimport { StockData } from '../../../types';\n\n\nexport interface TableProps {\n  records: StockData[]\n}\n\nexport const Table: React.FC<TableProps> = ({ records }) => {\n  return (\n    <AntdTable\n      scroll={{ x: true }}\n      columns={[\n        {\n          title: 'Date',\n          dataIndex: 'date',\n          render: date => dayjs(date).format('ll'),\n          sorter: (a, b) => a.date.unix() - b.date.unix()\n        },\n        {\n          title: 'Close',\n          dataIndex: 'close',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.close - b.close\n        },\n        {\n          title: 'Volume',\n          dataIndex: 'volume',\n          sorter: (a, b) => a.volume - b.volume\n        },\n        {\n          title: 'Open',\n          dataIndex: 'open',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.open - b.open\n        },\n        {\n          title: 'High',\n          dataIndex: 'high',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.high - b.high\n        },\n        {\n          title: 'Low',\n          dataIndex: 'low',\n          render: value => `$${value}`,\n          sorter: (a, b) => a.low - b.low\n        },\n        {\n          title: 'Change',\n          dataIndex: 'priceChange',\n          render: value => `$${value.toFixed(2)}`,\n          sorter: (a, b) => a.priceChange - b.priceChange\n        },\n        {\n          title: 'SMA5',\n          dataIndex: 'sma5Percentage',\n          render: value => value ? `${value.toFixed(2)}%` : 'n/a',\n          sorter: (a, b) => (a.sma5Percentage ?? 0) - (b.sma5Percentage ?? 0)\n        }\n      ]}\n      dataSource={records}\n      rowKey={r => r.date.unix()} />\n  );\n};\n","import dayjs from 'dayjs';\r\nimport React from 'react';\r\nimport { Message, Model } from './types';\r\n\r\n\r\nexport default (model?: Partial<Model>): [Model, React.Dispatch<Message>] => {\r\n  const initialState: Model = {\r\n    records: model?.records ?? [],\r\n    recordsInRange: model?.records ?? [],\r\n    range: [null, null],\r\n    uploadModalVisible: false\r\n  };\r\n\r\n  const reducer = (model: Model, message: Message): Model => {\r\n    switch (message.type) {\r\n    case 'SET_RANGE': {\r\n      return {\r\n        ...model,\r\n        recordsInRange: model.records.filter(r => {\r\n          const date = dayjs(r.date);\r\n          const from = message.range?.[0]?.subtract(1, 'day');\r\n          const to   = message.range?.[1]?.add(1, 'day');\r\n\r\n          if (from && !to) return date.isAfter(from, 'day');\r\n          if (!from && to) return date.isBefore(to, 'day');\r\n          if (from && to)  return date.isBetween(from, to, 'day');\r\n\r\n          return true;\r\n        }),\r\n        range: message.range\r\n      };\r\n    }\r\n    case 'SHOW_MODAL': return { ...model, uploadModalVisible: true };\r\n    case 'HIDE_MODAL': return { ...model, uploadModalVisible: false };\r\n    }\r\n  };\r\n\r\n  return React.useReducer(reducer, initialState);\r\n};\r\n","import { default as View } from './view';\r\nimport * as types from './types';\r\nimport * as state from './state';\r\n\r\n\r\nexport default {\r\n  View,\r\n  types,\r\n  state\r\n};\r\n","import React from 'react';\r\n\r\nimport { Button, Col, Divider, Modal, PageHeader, Row, Space } from 'antd';\r\nimport { Dayjs } from 'dayjs';\r\nimport { RangeValue } from 'rc-picker/lib/interface';\r\n\r\nimport { Statistics, Chart, Table } from './components';\r\nimport useState from './state';\r\nimport { StockData } from '../../types';\r\nimport { File } from '../upload/components';\r\nimport { GithubOutlined } from '@ant-design/icons';\r\nimport { responsiveMap } from 'antd/lib/_util/responsiveObserve';\r\nimport { DatePicker, Header } from '../../components';\r\n\r\n\r\ninterface AnalyticsProps {\r\n  stockData: StockData[]\r\n  // records: StockData[]\r\n  onBack: () => void\r\n}\r\n\r\nexport default function Analytics(props: AnalyticsProps): JSX.Element {\r\n  const [model, update] = useState({ records: props.stockData });\r\n\r\n  const setRange = (range: RangeValue<Dayjs>): void =>\r\n    update({ type: 'SET_RANGE', range: range ?? [null, null] });\r\n\r\n  return (\r\n    <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n      <Header\r\n        title=\"Analytics\"\r\n        onBack={props.onBack}\r\n        extra={<DatePicker.RangePicker onChange={setRange} />} />\r\n      <Divider>Statistics</Divider>\r\n      <Statistics stockData={model.recordsInRange} />\r\n      <Divider>Chart</Divider>\r\n      <Chart stockData={model.recordsInRange} />\r\n      <Divider>Table</Divider>\r\n      <Table records={model.recordsInRange} />\r\n    </Space>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { Layout } from './components';\r\nimport { StockData } from './types';\r\nimport { Analytics, Upload } from './stock';\r\n\r\n\r\nexport const App: React.FC = () => {\r\n  const [stockData, setStockData] = React.useState<StockData[]>([]);\r\n\r\n  const clearStockData = React.useCallback(() => setStockData([]), []);\r\n\r\n  return (\r\n    <Layout>\r\n      {stockData.length === 0\r\n        ? <Upload.View  onUpload={setStockData} />\r\n        : <Analytics.View onBack={clearStockData} stockData={stockData}  />}\r\n    </Layout>\r\n  );\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'antd/dist/antd.min.css';\r\nimport './index.css';\r\n\r\nimport dayjs from 'dayjs';\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat';\r\nimport isBetween from 'dayjs/plugin/isBetween';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\ndayjs.extend(localizedFormat);\r\ndayjs.extend(isBetween);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}